<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hdj.ssm.mapper.ItemsMapperCustom">

	 <!-- 定义商品查询的sql片段，就是商品查询条件 -->
   <sql id="query_items_where">
   	<!-- 使用动态sql，通过if判断，满足条件进行sql拼接 -->
   	<!-- 商品查询条件通过ItemsQueryVo包装对象 中itemsCustom属性传递 -->
   		<if test="itemsCustom!=null">
   			<if test="itemsCustom.name!=null and itemsCustom.name!=''">
   				items.name LIKE '%${itemsCustom.name}%'
   			</if>
   		</if>
	
   </sql>
  	
  	<!-- 商品列表查询 -->
  	<!-- parameterType传入包装对象(包装了查询条件)
  		resultType建议使用扩展对象
  	 -->
  	<select id="findItemsList" parameterType="org.hdj.ssm.po.ItemsCustomVo"
  		 resultType="org.hdj.ssm.po.ItemsCustom">
  		SELECT * FROM items  
  		<where>
  			<include refid="query_items_where"></include>
  		</where>
  	</select>
  	
  	
  	<delete id="deleteItems" parameterType="java.lang.Integer">
        delete from items where id in
        <foreach item="items_id" collection="array" open="(" separator="," close=")">
            #{items_id}
        </foreach>
    </delete>
    
    <!-- 批量修改 -->
    <update id="updateItemsList" parameterType="org.hdj.ssm.po.ItemsCustomVo">
    		<foreach  item="itemsCustom" collection="itemList" open="" separator=";" close="">
    		update  items 
            	<set>
            	  name = #{itemsCustom.name,jdbcType=VARCHAR},
			      price = #{itemsCustom.price,jdbcType=REAL},
			      pic = #{itemsCustom.pic,jdbcType=VARCHAR},
			      createtime = #{itemsCustom.createtime,jdbcType=TIMESTAMP},
			      detail = #{itemsCustom.detail,jdbcType=LONGVARCHAR}
            	</set>
            	<where>
            		items.id=#{itemsCustom.id}
            	</where>
        	</foreach>
    </update>
</mapper>
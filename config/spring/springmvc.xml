<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

<!-- 组件扫描 -->
<context:component-scan base-package="org.hdj.ssm.controller"></context:component-scan>
	
<!--注解驱动  -->
<mvc:annotation-driven conversion-service="conversionService" validator="validator"></mvc:annotation-driven>


	

<!--注解适配器
	 在注解适配器中加入messageConverters
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
        <list>
        <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
        </list>
        </property>
    </bean>
    
-->


 
<!--1. 转换器服务：用于类型转换  -->
<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
			<!-- 可定义多个转换器 -->
				<bean class="org.hdj.ssm.controller.convertor.CustomConverter"/>
			</list>
		</property>
	</bean>



<!-- 校验器 -->
<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- 校验器-->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名-->
		<property name="basenames">   
       	 <list>    
            <value>classpath:CustomValidationMessages</value> 
       	 </list>   
    	</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>




	<!-- 视图解析器 -->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="prefix" value="/WEB-INF/page/"/>
	<property name="suffix" value=".jsp"/>
</bean>

<!-- 配置全局异常解析器 : 只能配置一个
<bean class="org.hdj.ssm.exception.CustomExceptionResolver"></bean>
-->

<!-- 使用SimpleMappingExceptionResolver实现异常处理  
<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	 定义默认的异常处理页面，当该异常类型的注册时使用 ; value:错误页面的名称
	<property name="defaultErrorView" value="error"></property>
	 定义异常处理页面用来获取异常信息的变量名，默认名为exception  
	 <property name="exceptionAttribute" value="ex"></property>
	 定义需要特殊处理的异常，用类名或完全路径名作为key，异常显示页名作为值  
    <property name="exceptionMappings">  
        <props>  
            <prop key="org.hdj.ssm.exception.CustomSimpleException">error</prop>  
            这里还可以继续扩展对不同异常类型的处理   
        </props>  
    </property>  
</bean>
-->
<!--配置文件上传解析器  -->
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 设置上传文件的最大尺寸为5MB -->
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
		<!-- 设置默认编码 -->  
    <property name="defaultEncoding" value="utf-8"></property>  
    <!-- 设置缓存大小 -->
     <property name="maxInMemorySize" value="40960"></property>
</bean>

<!-- 拦截器：可以配置多个，按顺序执行 -->
<mvc:interceptors>
	<mvc:interceptor>
	<!-- path="/**" ：表示拦截所有的url -->
		<mvc:mapping path="/**"/>
		<bean id="loginInterceptor" class="org.hdj.ssm.interceptor.LoginInterceptor"/>
	</mvc:interceptor>
</mvc:interceptors>
</beans>